{"version":3,"sources":["scripts.js","edd-compare-url.js","products-table.js","table-styling.js"],"names":["eddCompareURL","id","url","document","getElementById","innerHTML","style","display","elements","getElementsByClassName","i","length","link","replace","slice","setAttribute","jQuery","$","productsTable","element","this","table","children","productsWrapper","tableColumns","products","productsNumber","productWidth","eq","width","productsTopInfo","find","featuresTopInfo","topInfoHeight","innerHeight","leftScrolling","filterBtn","resetBtn","filtering","selectedproductsNumber","filterActive","navigation","bindEvents","checkResize","comparisonTables","forEach","updateProperties","windowResize","checkMQ","window","getComputedStyle","get","getPropertyValue","setTranformX","value","css","-moz-transform","-webkit-transform","-ms-transform","-o-transform","transform","prototype","self","on","requestAnimationFrame","updateLeftScrolling","setTimeout","product","parents","hasClass","removeClass","upadteFilterBtn","addClass","event","preventDefault","showSelection","resetSelection","updateSlider","target","scrollLeft","parseInt","outerWidth","updateNavigationVisibility","tableHeight","height","filterProducts","resetProductsVisibility","containerOffsetLeft","offset","left","selectedProducts","filter","numberProducts","each","index","leftTranslate","one","attr","off","n","bool","animate","push","row","not","undefined","indexOf"],"mappings":"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","file":"scripts.js","sourcesContent":["'use strict';\n\n/*\n* EDD Compare URL\n* Function does 3 things:\n* 1. Appends download ID to the inner text of a hidden div when button is clicked\n* 2. Hides the compare button and shows a go button instead\n* 3. Updates the URL for each go button each time another is clicked\n*\n* @since 0.1\n */\nfunction eddCompareURL(id) {\n    var url = \"edd-compare-url\";\n    document.getElementById(url).innerHTML = document.getElementById(url).innerHTML + id + ',';\n    document.getElementById('edd-compare-button-' + id).style.display = 'none';\n    document.getElementById('edd-compare-go-button-' + id).style.display = 'inline-block';\n    var elements = document.getElementsByClassName(\"edd-compare-go\");\n    for (var i = 0; i < elements.length; i++) {\n        var link = document.getElementById(url).innerHTML.replace(/\\&amp\\;/g, \"&\").slice(0, -1);\n        elements[i].setAttribute(\"href\", link);\n    }\n}\n'use strict';\n\njQuery(function ($) {\n\n    /**\n     * Create a productsTable object, storing its interior members\n     * @param {object} element jQuery Object\n     */\n    function productsTable(element) {\n        this.element = element;\n        this.table = this.element.children('.edd-compare-products-table');\n        this.productsWrapper = this.table.children('.edd-compare-products-wrapper');\n        this.tableColumns = this.productsWrapper.children('.edd-compare-products-columns');\n        this.products = this.tableColumns.children('.product');\n        //additional properties here\n        this.productsNumber = this.products.length;\n        this.productWidth = this.products.eq(0).width();\n        this.productsTopInfo = this.table.find('.top-info');\n        this.featuresTopInfo = this.table.children('.features').children('.top-info');\n        this.topInfoHeight = this.featuresTopInfo.innerHeight() + 30;\n        this.leftScrolling = false;\n        this.filterBtn = this.element.find('.filter');\n        this.resetBtn = this.element.find('.reset');\n        this.filtering = false, this.selectedproductsNumber = 0;\n        this.filterActive = false;\n        this.navigation = this.table.children('.edd-compare-products-navigation');\n        // bind table events\n        this.bindEvents();\n    }\n\n    productsTable.prototype.bindEvents = function () {\n        var self = this;\n\n        self.productsWrapper.on('scroll', function () {\n            if (!self.leftScrolling) {\n                self.leftScrolling = true;\n                !window.requestAnimationFrame ? setTimeout(function () {\n                    self.updateLeftScrolling();\n                }, 250) : window.requestAnimationFrame(function () {\n                    self.updateLeftScrolling();\n                });\n            }\n        });\n\n        self.products.on('click', '.top-info', function () {\n            var product = $(this).parents('.product');\n            if (!self.filtering && product.hasClass('selected')) {\n                product.removeClass('selected');\n                self.selectedproductsNumber = self.selectedproductsNumber - 1;\n                self.upadteFilterBtn();\n            } else if (!self.filtering && !product.hasClass('selected')) {\n                product.addClass('selected');\n                self.selectedproductsNumber = self.selectedproductsNumber + 1;\n                self.upadteFilterBtn();\n            }\n        });\n\n        self.filterBtn.on('click', function (event) {\n            event.preventDefault();\n            if (self.filterActive) {\n                self.filtering = true;\n                self.showSelection();\n                self.filterActive = false;\n                self.filterBtn.removeClass('active');\n            }\n        });\n        //reset product selection\n        self.resetBtn.on('click', function (event) {\n            event.preventDefault();\n            if (self.filtering) {\n                self.filtering = false;\n                self.resetSelection();\n            } else {\n                self.products.removeClass('selected');\n            }\n            self.selectedproductsNumber = 0;\n            self.upadteFilterBtn();\n        });\n\n        this.navigation.on('click', 'a', function (event) {\n            event.preventDefault();\n            self.updateSlider($(event.target).hasClass('next'));\n        });\n    };\n\n    productsTable.prototype.upadteFilterBtn = function () {\n        //show/hide filter btn\n        if (this.selectedproductsNumber >= 2) {\n            this.filterActive = true;\n            this.filterBtn.addClass('active');\n        } else {\n            this.filterActive = false;\n            this.filterBtn.removeClass('active');\n        }\n    };\n\n    productsTable.prototype.updateLeftScrolling = function () {\n        var totalTableWidth = parseInt(this.tableColumns.eq(0).outerWidth(true)),\n            tableViewport = parseInt(this.element.width()),\n            scrollLeft = this.productsWrapper.scrollLeft();\n\n        scrollLeft > 0 ? this.table.addClass('scrolling') : this.table.removeClass('scrolling');\n\n        if (this.table.hasClass('top-fixed') && checkMQ() == 'desktop') {\n            setTranformX(this.productsTopInfo, '-' + scrollLeft);\n            setTranformX(this.featuresTopInfo, '0');\n        }\n\n        this.leftScrolling = false;\n\n        this.updateNavigationVisibility(scrollLeft);\n    };\n\n    productsTable.prototype.updateNavigationVisibility = function (scrollLeft) {\n        scrollLeft > 0 ? this.navigation.find('.prev').removeClass('inactive') : this.navigation.find('.prev').addClass('inactive');\n        scrollLeft < this.tableColumns.outerWidth(true) - this.productsWrapper.width() && this.tableColumns.outerWidth(true) > this.productsWrapper.width() ? this.navigation.find('.next').removeClass('inactive') : this.navigation.find('.next').addClass('inactive');\n    };\n\n    productsTable.prototype.updateProperties = function () {\n        this.tableHeight = this.table.height();\n        this.productWidth = this.products.eq(0).width();\n        this.topInfoHeight = this.featuresTopInfo.innerHeight() + 30;\n        this.tableColumns.css('width', this.productWidth * this.productsNumber + 'px');\n    };\n\n    productsTable.prototype.showSelection = function () {\n        this.element.addClass('filtering');\n        this.filterProducts();\n    };\n\n    productsTable.prototype.resetSelection = function () {\n        this.tableColumns.css('width', this.productWidth * this.productsNumber + 'px');\n        this.element.removeClass('no-product-transition');\n        this.resetProductsVisibility();\n    };\n\n    productsTable.prototype.filterProducts = function () {\n        var self = this,\n            containerOffsetLeft = self.tableColumns.offset().left,\n            scrollLeft = self.productsWrapper.scrollLeft(),\n            selectedProducts = this.products.filter('.selected'),\n            numberProducts = selectedProducts.length;\n\n        selectedProducts.each(function (index) {\n            var product = $(this),\n                leftTranslate = containerOffsetLeft + index * self.productWidth + scrollLeft - product.offset().left;\n            setTranformX(product, leftTranslate);\n\n            if (index == numberProducts - 1) {\n                product.one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {\n                    setTimeout(function () {\n                        self.element.addClass('no-product-transition');\n                    }, 50);\n                    setTimeout(function () {\n                        self.element.addClass('filtered');\n                        self.productsWrapper.scrollLeft(0);\n                        self.tableColumns.css('width', self.productWidth * numberProducts + 'px');\n                        selectedProducts.attr('style', '');\n                        product.off('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend');\n                        self.updateNavigationVisibility(0);\n                    }, 100);\n                });\n            }\n        });\n\n        if ($('.no-csstransitions').length > 0) {\n            //browser not supporting css transitions\n            self.element.addClass('filtered');\n            self.productsWrapper.scrollLeft(0);\n            self.tableColumns.css('width', self.productWidth * numberProducts + 'px');\n            selectedProducts.attr('style', '');\n            self.updateNavigationVisibility(0);\n        }\n    };\n\n    productsTable.prototype.resetProductsVisibility = function () {\n        var self = this,\n            containerOffsetLeft = self.tableColumns.offset().left,\n            selectedProducts = this.products.filter('.selected'),\n            numberProducts = selectedProducts.length,\n            scrollLeft = self.productsWrapper.scrollLeft(),\n            n = 0;\n\n        self.element.addClass('no-product-transition').removeClass('filtered');\n\n        self.products.each(function (index) {\n            var product = $(this);\n            if (product.hasClass('selected')) {\n                n = n + 1;\n                var leftTranslate = (-index + n - 1) * self.productWidth;\n                setTranformX(product, leftTranslate);\n            }\n        });\n\n        setTimeout(function () {\n            self.element.removeClass('no-product-transition filtering');\n            setTranformX(selectedProducts, '0');\n            selectedProducts.removeClass('selected').attr('style', '');\n        }, 50);\n    };\n\n    productsTable.prototype.updateSlider = function (bool) {\n        var scrollLeft = this.productsWrapper.scrollLeft();\n        scrollLeft = bool ? scrollLeft + this.productWidth : scrollLeft - this.productWidth;\n\n        if (scrollLeft < 0) scrollLeft = 0;\n        if (scrollLeft > this.tableColumns.outerWidth(true) - this.productsWrapper.width()) scrollLeft = this.tableColumns.outerWidth(true) - this.productsWrapper.width();\n\n        this.productsWrapper.animate({ scrollLeft: scrollLeft }, 200);\n    };\n\n    var comparisonTables = [];\n    $('.edd-compare-products').each(function () {\n        //create a productsTable object for each .edd-compare-products\n        comparisonTables.push(new productsTable($(this)));\n    });\n\n    var windowResize = false;\n    //detect window resize - reset .edd-compare-products properties\n    $(window).on('resize', function () {\n        if (!windowResize) {\n            windowResize = true;\n            !window.requestAnimationFrame ? setTimeout(checkResize, 250) : window.requestAnimationFrame(checkResize);\n        }\n    });\n\n    function checkResize() {\n        comparisonTables.forEach(function (element) {\n            element.updateProperties();\n        });\n\n        windowResize = false;\n    }\n\n    function checkMQ() {\n        //check if mobile or desktop device\n        return window.getComputedStyle(comparisonTables[0].element.get(0), '::after').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\n    }\n\n    function setTranformX(element, value) {\n        element.css({\n            '-moz-transform': 'translateX(' + value + 'px)',\n            '-webkit-transform': 'translateX(' + value + 'px)',\n            '-ms-transform': 'translateX(' + value + 'px)',\n            '-o-transform': 'translateX(' + value + 'px)',\n            'transform': 'translateX(' + value + 'px)'\n        });\n    }\n});\n'use strict';\n\njQuery(function ($) {\n\n    $('.edd-compare-products-features-list-labels li, .edd-compare-products-features-list li').on('mouseenter', function () {\n\n        var row = $(this).index();\n\n        $(this).not('.buy-button').not('[id^=\"edd_price_option_\"]').addClass('hover');\n\n        if ($(this).hasClass('.buy-button') || $(this).attr('id') !== undefined && $(this).attr('id').indexOf('edd_price_option_') > -1) return false;\n\n        $('.edd-compare-products-features-list-labels, .edd-compare-products-features-list').each(function (index, element) {\n\n            $(element).children().not('.buy-button').not('[id^=\"edd_price_option_\"]').eq(row).addClass('hover');\n        });\n    });\n\n    $('.edd-compare-products-features-list-labels li, .edd-compare-products-features-list li').on('mouseleave', function () {\n\n        var row = $(this).index();\n\n        $(this).not('.buy-button').not('[id^=\"edd_price_option_\"]').removeClass('hover');\n\n        if ($(this).hasClass('.buy-button') || $(this).attr('id') !== undefined && $(this).attr('id').indexOf('edd_price_option_') > -1) return false;\n\n        $('.edd-compare-products-features-list-labels, .edd-compare-products-features-list').each(function (index, element) {\n\n            $(element).children().not('.buy-button').not('[id^=\"edd_price_option_\"]').eq(row).removeClass('hover');\n        });\n    });\n});","/*\n* EDD Compare URL\n* Function does 3 things:\n* 1. Appends download ID to the inner text of a hidden div when button is clicked\n* 2. Hides the compare button and shows a go button instead\n* 3. Updates the URL for each go button each time another is clicked\n*\n* @since 0.1\n */\nfunction eddCompareURL(id) {\n    var url = \"edd-compare-url\";\n    document.getElementById(url).innerHTML = document.getElementById(url).innerHTML + id + ',';\n    document.getElementById('edd-compare-button-' + id).style.display = 'none';\n    document.getElementById('edd-compare-go-button-' + id).style.display = 'inline-block';\n    var elements = document.getElementsByClassName(\"edd-compare-go\");\n    for (var i = 0; i < elements.length; i++) {\n        var link = document.getElementById(url).innerHTML.replace(/\\&amp\\;/g, \"&\").slice(0, - 1);\n        elements[i].setAttribute(\"href\", link);\n    }\n}","jQuery( function( $ ) {\n\n    /**\n     * Create a productsTable object, storing its interior members\n     * @param {object} element jQuery Object\n     */\n    function productsTable( element ) {\n        this.element = element;\n        this.table = this.element.children('.edd-compare-products-table');\n        this.productsWrapper = this.table.children('.edd-compare-products-wrapper');\n        this.tableColumns = this.productsWrapper.children('.edd-compare-products-columns');\n        this.products = this.tableColumns.children('.product');\n        //additional properties here\n        this.productsNumber = this.products.length;\n\t\tthis.productWidth = this.products.eq(0).width();\n\t\tthis.productsTopInfo = this.table.find('.top-info');\n\t\tthis.featuresTopInfo = this.table.children('.features').children('.top-info');\n\t\tthis.topInfoHeight = this.featuresTopInfo.innerHeight() + 30;\n\t\tthis.leftScrolling = false;\n\t\tthis.filterBtn = this.element.find('.filter');\n\t\tthis.resetBtn = this.element.find('.reset');\n\t\tthis.filtering = false,\n\t\tthis.selectedproductsNumber = 0;\n\t\tthis.filterActive = false;\n\t\tthis.navigation = this.table.children('.edd-compare-products-navigation');\n        // bind table events\n        this.bindEvents();\n    }\n\n    productsTable.prototype.bindEvents = function() {\n        var self = this;\n\n        self.productsWrapper.on('scroll', function(){\n            if(!self.leftScrolling) {\n                self.leftScrolling = true;\n                (!window.requestAnimationFrame) ? setTimeout(function(){self.updateLeftScrolling();}, 250) : window.requestAnimationFrame(function(){self.updateLeftScrolling();});\n            }\n        });\n\n        self.products.on('click', '.top-info', function(){\n            var product = $(this).parents('.product');\n            if( !self.filtering && product.hasClass('selected') ) {\n                product.removeClass('selected');\n                self.selectedproductsNumber = self.selectedproductsNumber - 1;\n                self.upadteFilterBtn();\n            } else if( !self.filtering && !product.hasClass('selected') ) {\n                product.addClass('selected');\n                self.selectedproductsNumber = self.selectedproductsNumber + 1;\n                self.upadteFilterBtn();\n            }\n        });\n        \n        self.filterBtn.on('click', function(event){\n            event.preventDefault();\n            if(self.filterActive) {\n                self.filtering =  true;\n                self.showSelection();\n                self.filterActive = false;\n                self.filterBtn.removeClass('active');\n            }\n        });\n        //reset product selection\n        self.resetBtn.on('click', function(event){\n            event.preventDefault();\n            if( self.filtering ) {\n                self.filtering =  false;\n                self.resetSelection();\n            } else {\n                self.products.removeClass('selected');\n            }\n            self.selectedproductsNumber = 0;\n            self.upadteFilterBtn();\n        });\n\n        this.navigation.on('click', 'a', function(event){\n            event.preventDefault();\n            self.updateSlider( $(event.target).hasClass('next') );\n        });\n    }\n\n    productsTable.prototype.upadteFilterBtn = function() {\n        //show/hide filter btn\n        if( this.selectedproductsNumber >= 2 ) {\n            this.filterActive = true;\n            this.filterBtn.addClass('active');\n        } else {\n            this.filterActive = false;\n            this.filterBtn.removeClass('active');\n        }\n    }\n\n    productsTable.prototype.updateLeftScrolling = function() {\n        var totalTableWidth = parseInt(this.tableColumns.eq(0).outerWidth(true)),\n            tableViewport = parseInt(this.element.width()),\n            scrollLeft = this.productsWrapper.scrollLeft();\n\n        ( scrollLeft > 0 ) ? this.table.addClass('scrolling') : this.table.removeClass('scrolling');\n\n        if( this.table.hasClass('top-fixed') && checkMQ() == 'desktop') {\n            setTranformX(this.productsTopInfo, '-'+scrollLeft);\n            setTranformX(this.featuresTopInfo, '0');\n        }\n\n        this.leftScrolling =  false;\n\n        this.updateNavigationVisibility(scrollLeft);\n    }\n\n    productsTable.prototype.updateNavigationVisibility = function(scrollLeft) {\n        ( scrollLeft > 0 ) ? this.navigation.find('.prev').removeClass('inactive') : this.navigation.find('.prev').addClass('inactive');\n        ( scrollLeft < this.tableColumns.outerWidth(true) - this.productsWrapper.width() && this.tableColumns.outerWidth(true) > this.productsWrapper.width() ) ? this.navigation.find('.next').removeClass('inactive') : this.navigation.find('.next').addClass('inactive');\n    }\n\n    productsTable.prototype.updateProperties = function() {\n        this.tableHeight = this.table.height();\n        this.productWidth = this.products.eq(0).width();\n        this.topInfoHeight = this.featuresTopInfo.innerHeight() + 30;\n        this.tableColumns.css('width', this.productWidth*this.productsNumber + 'px');\n    }\n\n    productsTable.prototype.showSelection = function() {\n        this.element.addClass('filtering');\n        this.filterProducts();\n    }\n\n    productsTable.prototype.resetSelection = function() {\n        this.tableColumns.css('width', this.productWidth*this.productsNumber + 'px');\n        this.element.removeClass('no-product-transition');\n        this.resetProductsVisibility();\n    }\n\n    productsTable.prototype.filterProducts = function() {\n        var self = this,\n            containerOffsetLeft = self.tableColumns.offset().left,\n            scrollLeft = self.productsWrapper.scrollLeft(),\n            selectedProducts = this.products.filter('.selected'),\n            numberProducts = selectedProducts.length;\n\n        selectedProducts.each(function(index){\n            var product = $(this),\n                leftTranslate = containerOffsetLeft + index*self.productWidth + scrollLeft - product.offset().left;\n            setTranformX(product, leftTranslate);\n\n            if(index == numberProducts - 1 ) {\n                product.one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(){\n                    setTimeout(function(){\n                        self.element.addClass('no-product-transition');\n                    }, 50);\n                    setTimeout(function(){\n                        self.element.addClass('filtered');\n                        self.productsWrapper.scrollLeft(0);\n                        self.tableColumns.css('width', self.productWidth*numberProducts + 'px');\n                        selectedProducts.attr('style', '');\n                        product.off('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend');\n                        self.updateNavigationVisibility(0);\n                    }, 100);\n                });\n            }\n        });\n\n        if( $('.no-csstransitions').length > 0 ) {\n            //browser not supporting css transitions\n            self.element.addClass('filtered');\n            self.productsWrapper.scrollLeft(0);\n            self.tableColumns.css('width', self.productWidth*numberProducts + 'px');\n            selectedProducts.attr('style', '');\n            self.updateNavigationVisibility(0);\n        }\n    }\n\n    productsTable.prototype.resetProductsVisibility = function() {\n        var self = this,\n            containerOffsetLeft = self.tableColumns.offset().left,\n            selectedProducts = this.products.filter('.selected'),\n            numberProducts = selectedProducts.length,\n            scrollLeft = self.productsWrapper.scrollLeft(),\n            n = 0;\n\n        self.element.addClass('no-product-transition').removeClass('filtered');\n\n        self.products.each(function(index){\n            var product = $(this);\n            if (product.hasClass('selected')) {\n                n = n + 1;\n                var leftTranslate = (-index + n - 1)*self.productWidth;\n                setTranformX(product, leftTranslate);\n            }\n        });\n\n        setTimeout(function(){\n            self.element.removeClass('no-product-transition filtering');\n            setTranformX(selectedProducts, '0');\n            selectedProducts.removeClass('selected').attr('style', '');\n        }, 50);\n    }\n\n    productsTable.prototype.updateSlider = function(bool) {\n        var scrollLeft = this.productsWrapper.scrollLeft();\n        scrollLeft = ( bool ) ? scrollLeft + this.productWidth : scrollLeft - this.productWidth;\n\n        if( scrollLeft < 0 ) scrollLeft = 0;\n        if( scrollLeft > this.tableColumns.outerWidth(true) - this.productsWrapper.width() ) scrollLeft = this.tableColumns.outerWidth(true) - this.productsWrapper.width();\n\n        this.productsWrapper.animate( {scrollLeft: scrollLeft}, 200 );\n    }\n\n    var comparisonTables = [];\n    $('.edd-compare-products').each(function(){\n        //create a productsTable object for each .edd-compare-products\n        comparisonTables.push(new productsTable($(this)));\n    });\n\n    var windowResize = false;\n    //detect window resize - reset .edd-compare-products properties\n    $(window).on('resize', function(){\n        if(!windowResize) {\n            windowResize = true;\n            (!window.requestAnimationFrame) ? setTimeout(checkResize, 250) : window.requestAnimationFrame(checkResize);\n        }\n    });\n\n    function checkResize(){\n        comparisonTables.forEach(function(element){\n            element.updateProperties();\n        });\n\n        windowResize = false;\n    }\n\n    function checkMQ() {\n        //check if mobile or desktop device\n        return window.getComputedStyle(comparisonTables[0].element.get(0), '::after').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\n    }\n\n    function setTranformX(element, value) {\n        element.css({\n            '-moz-transform': 'translateX(' + value + 'px)',\n            '-webkit-transform': 'translateX(' + value + 'px)',\n            '-ms-transform': 'translateX(' + value + 'px)',\n            '-o-transform': 'translateX(' + value + 'px)',\n            'transform': 'translateX(' + value + 'px)'\n        });\n    }\n    \n} );","jQuery( function( $ ) {\n    \n    $( '.edd-compare-products-features-list-labels li, .edd-compare-products-features-list li' ).on( 'mouseenter', function() {\n        \n        var row = $( this ).index();\n            \n        $( this ).not( '.buy-button' ).not( '[id^=\"edd_price_option_\"]' ).addClass( 'hover' );\n        \n        if ( $( this ).hasClass( '.buy-button' ) || ( $( this ).attr( 'id' ) !== undefined && $( this ).attr( 'id' ).indexOf( 'edd_price_option_' ) > -1 ) ) return false;\n        \n        $( '.edd-compare-products-features-list-labels, .edd-compare-products-features-list' ).each( function( index, element ) { \n            \n            $( element ).children().not( '.buy-button' ).not( '[id^=\"edd_price_option_\"]' ).eq( row ).addClass( 'hover' );\n            \n        } );\n        \n    } );\n    \n    $( '.edd-compare-products-features-list-labels li, .edd-compare-products-features-list li' ).on( 'mouseleave', function() {\n        \n        var row = $( this ).index();\n        \n        $( this ).not( '.buy-button' ).not( '[id^=\"edd_price_option_\"]' ).removeClass( 'hover' );\n        \n        if ( $( this ).hasClass( '.buy-button' ) || ( $( this ).attr( 'id' ) !== undefined && $( this ).attr( 'id' ).indexOf( 'edd_price_option_' ) > -1 ) ) return false;\n        \n        $( '.edd-compare-products-features-list-labels, .edd-compare-products-features-list' ).each( function( index, element ) { \n            \n            $( element ).children().not( '.buy-button' ).not( '[id^=\"edd_price_option_\"]' ).eq( row ).removeClass( 'hover' );\n            \n        } );\n        \n    } );\n    \n} );"]}